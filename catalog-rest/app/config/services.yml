# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    
    # explicitly configure Controllers
    AppBundle\Controller\ProductController:
        arguments:
            - "@handler.product_handler"
            - "@logger"
            
    AppBundle\Controller\CategoryController:
        arguments:
            - "@handler.category_handler"
    
    # -- EVENTS --
    event.listener.content_type_listener:
        class: AppBundle\Event\Listener\ContentTypeListener
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
            
    # -- DOCTRINE ENTITY REPOSITORY --
    doctrine_entity_repository.category:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - AppBundle\Entity\Category

    doctrine_entity_repository.product:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - AppBundle\Entity\Product

    doctrine_entity_repository.user:
        class: Doctrine\ORM\EntityRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - AppBundle\Entity\User
            
            
    # -- REPOSITORY --
    repository.common_doctrine_repository:
        class: AppBundle\Repository\Doctrine\CommonDoctrineRepository
        arguments:
            - "@doctrine.orm.entity_manager"

    repository.doctrine_category_repository:
        class: AppBundle\Repository\Doctrine\DoctrineCategoryRepository
        arguments:
            - "@repository.common_doctrine_repository"
            - "@doctrine_entity_repository.category"

    repository.doctrine_product_repository:
        class: AppBundle\Repository\Doctrine\DoctrineProductRepository
        arguments:
            - "@repository.common_doctrine_repository"
            - "@doctrine_entity_repository.product"

    repository.doctrine_user_repository:
        class: AppBundle\Repository\Doctrine\DoctrineUserRepository
        arguments:
            - "@repository.common_doctrine_repository"
            
    # -- HANDLER --
    handler.product_handler:
        class: AppBundle\Handler\ProductHandler
        arguments:
            - "@repository.doctrine_product_repository"
            - "@form.handler.product_form_handler"
            
    handler.category_handler:
        class: AppBundle\Handler\CategoryHandler
        arguments:
            - "@repository.doctrine_category_repository"
    
     # -- FORM --
    form.type.product:
        class: AppBundle\Form\Type\ProductType
        arguments:
            - "@repository.doctrine_category_repository"
        tags:
            - { name: form.type, alias: product_form }
            
    # -- FORM HANDLER --
    form.handler.product_form_handler:
        class: AppBundle\Form\Handler\FormHandler
        arguments:
            - "@form.factory"
            - "@form.type.product"
            
    # -- SECURITY ---
    security.authorization.voter.product_voter:
        class:      AppBundle\Security\Authorization\Voter\ProductVoter
        public:     false
        tags:
           - { name: security.voter }

